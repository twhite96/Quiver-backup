{
  "title": "Codecademy 12/14",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "$(document).ready(function() {\n    $('#button').click(function() {\n        var toAdd = $('input[name=checkListItem]').val();\n        $(\".list\").append('<div class=\"item\">' + toAdd + '</div>');\n    });\n    });"
    },
    {
      "type": "text",
      "data": "<p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\">The HTML document has a form element with one text input control, The&nbsp;<code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">name</code>attribute value on the input tag is&nbsp;<code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">checkListItem</code>. In addition to the form element, there is an element with&nbsp;<code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">id</code>&nbsp;attribute value,&nbsp;<code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">button</code>. This is the object that gets a binding to the&nbsp;<code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">click</code>&nbsp;event listener.</p><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\">So we have two listeners in the overall code:</p><pre style=\"padding: 9.5px; font-family: Monaco, 'Courier New', monospace; font-size: 12.95px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-bottom: 10px; line-height: 20px; border: 1px solid rgba(0, 0, 0, 0.14902); white-space: pre-wrap; word-break: break-all; word-wrap: break-word; widows: 1; background-color: rgb(245, 245, 245); background-position: initial initial; background-repeat: initial initial;\"><code style=\"font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: inherit;\">$(document).ready()\n</code></pre><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\">and</p><pre style=\"padding: 9.5px; font-family: Monaco, 'Courier New', monospace; font-size: 12.95px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-bottom: 10px; line-height: 20px; border: 1px solid rgba(0, 0, 0, 0.14902); white-space: pre-wrap; word-break: break-all; word-wrap: break-word; widows: 1; background-color: rgb(245, 245, 245); background-position: initial initial; background-repeat: initial initial;\"><code style=\"font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: inherit;\">$('#button').click()\n</code></pre><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\"><code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">ready()</code>&nbsp;is listening for the&nbsp;<strong>DOMContentLoaded</strong>&nbsp;event, signalling that the document elements are all in place and ready for script manipulation. The handler that is triggered by this listener is the function it contains, namely, our code.</p><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\"><code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">click()</code>&nbsp;is listening for a mouse click on the&nbsp;<code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">Add!</code>&nbsp;button which triggers the handler we have built in.</p><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\">That function polls the&nbsp;<code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">value</code>&nbsp;attribute of the input element and assigns it to<code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">toAdd</code>. This is a plain text string. To make it into an HTML string, we add OPENTAG and ENDTAG to the text:</p><pre style=\"padding: 9.5px; font-family: Monaco, 'Courier New', monospace; font-size: 12.95px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-bottom: 10px; line-height: 20px; border: 1px solid rgba(0, 0, 0, 0.14902); white-space: pre-wrap; word-break: break-all; word-wrap: break-word; widows: 1; background-color: rgb(245, 245, 245); background-position: initial initial; background-repeat: initial initial;\"><code style=\"font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: inherit;\">'&lt;div&gt;' + toAdd + '&lt;/div&gt;'\n</code></pre><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\">and to that we add a class attribute,</p><pre style=\"padding: 9.5px; font-family: Monaco, 'Courier New', monospace; font-size: 12.95px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-bottom: 10px; line-height: 20px; border: 1px solid rgba(0, 0, 0, 0.14902); white-space: pre-wrap; word-break: break-all; word-wrap: break-word; widows: 1; background-color: rgb(245, 245, 245); background-position: initial initial; background-repeat: initial initial;\"><code style=\"font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: inherit;\">htmlString = '&lt;div class=\"item\"&gt;' + toAdd + '&lt;/div&gt;';\n</code></pre><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\">Just to review... This is HTML markup as it would appear in the source document:</p><pre style=\"padding: 9.5px; font-family: Monaco, 'Courier New', monospace; font-size: 12.95px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-bottom: 10px; line-height: 20px; border: 1px solid rgba(0, 0, 0, 0.14902); white-space: pre-wrap; word-break: break-all; word-wrap: break-word; widows: 1; background-color: rgb(245, 245, 245); background-position: initial initial; background-repeat: initial initial;\"><code style=\"font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: inherit;\">&lt;div class=\"item\"&gt;plain text&lt;/div&gt;\n</code></pre><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\">The difference is clear. This one is static, whereas the one above it is dynamically generated. In other words, an HTML string is something that looks like valid HTML, but conforms to the string syntax of JavaScript, namely, quoted, with dynamic content concatenated to opening and closing string expressions..</p><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\">Lastly, the source document also has an element with class&nbsp;<code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">list</code>, to which we intend to add each entered item. That's where the&nbsp;<code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">append()</code>&nbsp;method comes in. First we create a jQuery object,</p><pre style=\"padding: 9.5px; font-family: Monaco, 'Courier New', monospace; font-size: 12.95px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-bottom: 10px; line-height: 20px; border: 1px solid rgba(0, 0, 0, 0.14902); white-space: pre-wrap; word-break: break-all; word-wrap: break-word; widows: 1; background-color: rgb(245, 245, 245); background-position: initial initial; background-repeat: initial initial;\"><code style=\"font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: inherit;\">$('.list') // jQuery object of `.list` selector\n</code></pre><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\">then call the jQuery method on this object,</p><pre style=\"padding: 9.5px; font-family: Monaco, 'Courier New', monospace; font-size: 12.95px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-bottom: 10px; line-height: 20px; border: 1px solid rgba(0, 0, 0, 0.14902); white-space: pre-wrap; word-break: break-all; word-wrap: break-word; widows: 1; background-color: rgb(245, 245, 245); background-position: initial initial; background-repeat: initial initial;\"><code style=\"font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: inherit;\">$('.list').append(htmlString);\n</code></pre><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\">We make use of the&nbsp;<code style=\"padding: 2px 4px; font-family: Monaco, 'Courier New', monospace; font-size: 13px; color: rgb(221, 17, 68); border: 1px solid rgb(225, 225, 232); background-color: rgb(247, 247, 249); background-position: initial initial; background-repeat: initial initial;\">item</code>&nbsp;class in the next exercise, when we introduce a document on() listener that triggers when an item is clicked. That's to come. Hopefully you have a better feel for what's going on in this program.</p><p style=\"margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; widows: 1; background-color: rgb(248, 248, 248);\">It goes without saying that this is only one of many ways. That's where reading and practice come in. Learning those other ways, reasoning their pro's and con's, and testing until the cows come home. Keep the API Documentation close at hand as you learn.</p>"
    }
  ]
}